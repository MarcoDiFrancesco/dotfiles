#!/usr/bin/bash

exec_hook() {
  killall xidlehook
  # --not-when-fullscreen removed because would not allow sleep also
  # if fullscreen in another window
  xidlehook \
    --not-when-audio \
    --detect-sleep \
    --timer 540 'lock -b' 'lock -r' \
    --timer 40 'lock -l' 'lock -r'
}

# Execte on lock screen
# TODO: remove after testing exec_lock_v2
#exec_lock() {
#  echo "Killing xidlehook"
#  killall xidlehook
#  brightness_reset
#  # Screen saver after n seconds
#  xset s 60
#  # Keyboard setup required if keyboard pluged while sleeping
#  betterlockscreen -l
#  # Wait for unlock
#  until ! pgrep i3lock; do sleep 1; done &&
#    xset s 0 &&
#    keyboard &&
#    exec_hook
#}

# Execte on lock screen
exec_lock_v2() {
  echo "Killing xidlehook"
  killall xidlehook
  brightness_reset
  # Keyboard setup required if keyboard pluged while sleeping
  betterlockscreen -l --off 15
  # Wait for unlock
  until ! pgrep i3lock; do sleep 1; done &&
    keyboard &&
    exec_hook
}

brightness_reset() {
  xrandr --output DP1 --brightness 1
  xrandr --output eDP1 --brightness 1
}

while getopts 'hlsbri' flag; do
  case "${flag}" in

  # hook (-h)
  h)
    exec_hook
    ;;

  # lock (-l)
  l)
    # exec_lock
    exec_lock_v2
    ;;

  # sleep (-s)
  # Not using betterlockscreen -s because if was sleeping, waken up
  # and then password was not inserted on i3lock, xidlehook inserts 
  # text in the password field.
  s)
    systemctl suspend
    # exec_lock
    exec_lock_v2
    ;;

  # brightness set (-b)
  b)
    brightness=1
    for i in {1..25}; do
      echo "Brightness ${brightness}"
      brightness=$(echo "$brightness - 0.02" | bc)
      xrandr --output DP1 --brightness $brightness
      xrandr --output eDP1 --brightness $brightness
    done
    ;;

  # brightness reset (-r)
  r)
    brightness_reset
    ;;
  esac
done
