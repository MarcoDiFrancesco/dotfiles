#!/bin/bash

trap "echo Exited!; exit;" SIGINT SIGTERM

print_usage() {
  printf "Usage:\n"
  printf "    -s | --skip : Skip files integrity checks\n"
  printf "\n"
  printf "Example:\n"
  printf "    encrypt-files --skip MyDirectory\n"
}

while [[ $# -gt 0 ]]; do
  case $1 in
    -s|--skip)
      SKIP_TEST="true"
      echo "INFO: Skipping file integrity checks"
      shift # past argument
      ;;
    # -s|--searchpath)
    #   SEARCHPATH="$2"
    #   shift # past argument
    #   shift # past value
    #   ;;
    -*|--*)
      print_usage
      exit 1
      ;;
    *)
      # String with all paths after arguments
      POSITIONAL_ARGS+=("$1") # save positional arg
      shift # past argument
      ;;
  esac
done

path="$POSITIONAL_ARGS"
# Check if directory is passed as argument
if [[ -z $path ]]; then
  echo "Add directory as argument like 'encrypt-files video-list'"
  exit 1
elif [[ ! -d $path ]]; then
  echo "Specified path is not a directory"
  exit 1
fi

destdir=$path-encrypted
# Create directory
if [[ ! -e $destdir ]]; then
  mkdir $destdir
  echo "${destdir} directory created"
fi

# Input password
read -s -p "Password:" psw
echo

# Test password on README
destpath=$destdir/README.md.7z
echo -en "[    Testing     ] README.md.7z "
if ! 7z t -p"${psw}" "$destpath" >/dev/null; then
  echo -en "\r[ Password Wrong ] README.md.7z \n"
  exit 1
else
  echo -en "\r[   Password Ok  ] README.md.7z \n"
  # TODO: re-encrypt readme, since it may change
fi

# Loop over files in path
for filepath in $path/*; do
  # Skip if is not a regular file
  [[ ! -f $filepath ]] && continue

  # From: /home/marco/file.txt
  # To:   file.txt
  filename="${filepath##*/}"

  destpath=$destdir/$filename.7z

  # If encrypted file already exists
  if [[ -e $destpath ]]; then
    if [ ! "$SKIP_TEST" = "true" ]; then
      echo -en "[    Testing     ] ${filename}"
      if ! 7z t -p"${psw}" "$destpath" >/dev/null; then
        echo "Error extracting '$filename'"
        exit 1
      fi
      echo -en "\r[    File ok     ] ${filename}\n"
    else
      echo -en "[      Skip      ] ${filename}\n"
    fi
  else
    echo -en "\r[  Encrypting... ] ${filename}"
    7z a "$destpath" "$filepath" -p"${psw}" >/dev/null
    echo -en "\r[   Encrypted    ] ${filename}\n"
  fi
done
